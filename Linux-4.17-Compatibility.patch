From 6869e853d6b808bf7b3453e165e53d8810b0fd3b Mon Sep 17 00:00:00 2001
From: Philip Langdale <philipl@overt.org>
Date: Sun, 3 Jun 2018 19:41:25 -0700
Subject: [PATCH] Linux 4.17 Compatibility

---
 driver/linux/crystalhd_fleafuncs.c | 12 ++++++++++++
 driver/linux/crystalhd_hw.c        |  4 ++++
 2 files changed, 16 insertions(+)

diff --git a/driver/linux/crystalhd_fleafuncs.c b/driver/linux/crystalhd_fleafuncs.c
index 6e4c0a7..0ba94db 100644
--- a/driver/linux/crystalhd_fleafuncs.c
+++ b/driver/linux/crystalhd_fleafuncs.c
@@ -513,7 +513,11 @@ void crystalhd_flea_runtime_power_up(struct crystalhd_hw *hw)
 
 	/*printk("RT Power Up Flea Complete\n"); */
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,17,0)
+	currTick = rdtsc_ordered();
+#else
 	rdtscll(currTick);
+#endif
 
 	hw->TickSpentInPD += (currTick - hw->TickStartInPD);
 
@@ -735,7 +739,11 @@ void crystalhd_flea_runtime_power_dn(struct crystalhd_hw *hw)
 	/*printk("RT Power Down Flea Complete\n"); */
 
 	/* Measure how much time we spend in idle */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,17,0)
+	hw->TickStartInPD = rdtsc_ordered();
+#else
 	rdtscll(hw->TickStartInPD);
+#endif
 
 	return;
 }
@@ -2874,7 +2882,11 @@ bool flea_GetPictureInfo(struct crystalhd_hw *hw, struct crystalhd_rx_dma_pkt *
 		hw->PDRatio = 0; /* NAREN - reset PD ratio to start measuring for new clip */
 		hw->PauseThreshold = hw->DefaultPauseThreshold;
 		hw->TickSpentInPD = 0;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,17,0)
+		hw->TickCntDecodePU = rdtsc_ordered();
+#else
 		rdtscll(hw->TickCntDecodePU);
+#endif
 
 		dev_dbg(dev, "[FMT CH] DoneSz:0x%x, PIB:%x %x %x %x %x %x %x %x %x %x\n",
 			rx_pkt->dio_req->uinfo.y_done_sz * 4,
diff --git a/driver/linux/crystalhd_hw.c b/driver/linux/crystalhd_hw.c
index d05c33e..8063860 100644
--- a/driver/linux/crystalhd_hw.c
+++ b/driver/linux/crystalhd_hw.c
@@ -655,7 +655,11 @@ BC_STATUS crystalhd_rx_pkt_done(struct crystalhd_hw *hw,
 					hw->PauseThreshold--;
 				}
 				else {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,17,0)
+					currTick = rdtsc_ordered();
+#else
 					rdtscll(currTick);
+#endif
 
 					temp_64 = (hw->TickSpentInPD)>>24;
 					TickSpentInPD_Hi = (uint32_t)(temp_64);
-- 
2.17.1

